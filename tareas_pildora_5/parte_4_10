[Parte_4_10_Ejercicios_Python_Basisc_I_2.ipynb](https://github.com/user-attachments/files/22562465/Parte_4_10_Ejercicios_Python_Basisc_I_2.ipynb)
{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "GB2K42EgK9q5"
   },
   "source": [
    "![TheBridge_logo_RGB_color.jpg](attachment:TheBridge_logo_RGB_color.jpg)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "GnwVlO37K9q6"
   },
   "source": [
    "![imagen](./img/ejercicios.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "_9pTa0PXK9q6"
   },
   "source": [
    "## EJERCICIOS PYTHON BASICO 2:\n",
    "## Tipos y conversión de tipos"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "tYmV-veoK9q6"
   },
   "source": [
    "Completa los siguiente ejercicios, la solución a los mismos se publicarán en el repo del curso a lo largo del sprint"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "YAdFbIOXK9q7"
   },
   "source": [
    "![ejercicio.png](./img/ejercicio.png)\n",
    "\n",
    "## Ejercicio 1\n",
    "\n",
    "1. Crea dos variables numericas: un `int` y un `float`\n",
    "2. Comprueba sus tipos\n",
    "3. Sumalas en otra nueva\n",
    "4. ¿De qué tipo es la nueva variable?\n",
    "5. Elimina las dos primeras variables creadas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "id": "8QZmuLOsK9q7"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'int'> <class 'float'>\n",
      "22.5 <class 'float'>\n"
     ]
    }
   ],
   "source": [
    "variable_int = 12\n",
    "variable_float = 10.5\n",
    "print(type(variable_int), type(variable_float))\n",
    "suma_de_variables = variable_int + variable_float \n",
    "#la suma entre variable int y float siempre va resultar en un float\n",
    "print(suma_de_variables, type(suma_de_variables))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "del variable_int\n",
    "del variable_float"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "f5xfpkpQK9q7"
   },
   "source": [
    "![ejercicio.png](./img/ejercicio.png)\n",
    "\n",
    "## Ejercicio 2\n",
    "Escribe un programa para pasar de grados a radianes. Hay que usar `input`. Recuerda que la conversión se realiza mediante\n",
    "\n",
    "radianes = grados*(pi/180)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "id": "V50TUQMzK9q7"
   },
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Introduce los grados 50\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50.0 grados equivalen a 0.8726646259971648 radianes\n"
     ]
    }
   ],
   "source": [
    "import math\n",
    "#Pedir al usuario los grados\n",
    "grados = float(input(\"Introduce los grados\"))\n",
    "\n",
    "#conversion de grados a radianes\n",
    "radianes = grados * (math.pi / 180)\n",
    "\n",
    "#mostrar el resultado, lo intente aca hacerlo usando el f-string \n",
    "print(f\"{grados} grados equivalen a {radianes} radianes\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Introduce los grados 180\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "180.0 grados es igual a 3.141592653589793 radianes\n"
     ]
    }
   ],
   "source": [
    "import math\n",
    "#pedir al usuario insertar los grados\n",
    "grados = float(input(\"Introduce los grados\"))\n",
    "\n",
    "#la conversion grados a radianes\n",
    "radianes = grados * (math.pi / 180)\n",
    "\n",
    "#resultado final\n",
    "print( str(grados) + \" grados es igual a \" + str(radianes) + \" radianes\" )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "zX3-p58CK9q7"
   },
   "source": [
    "![ejercicio.png](./img/ejercicio.png)\n",
    "\n",
    "## Ejercicio 3\n",
    "Escribe un programa que calcule el area de un paralelogramo (base x altura). También con `input`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "id": "s2QfNiBAK9q7"
   },
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Ingrese la medida de la base 5\n",
      "Ingrese la medida de la altura 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "si la base y la altura son 5.0 y 5.0 respectivamente, el area total del paralelogramo es igual a 25.0\n"
     ]
    }
   ],
   "source": [
    "#primero pedir al usario el input de la base y la altura\n",
    "base = float(input(\"Ingrese la medida de la base\"))\n",
    "altura = float(input(\"Ingrese la medida de la altura\"))\n",
    "\n",
    "#realizar el calculo\n",
    "area = base * altura\n",
    "\n",
    "#demostracion del resultado\n",
    "print(\"si la base y la altura son \" + str(base) + \" y \" + str(altura) + \" respectivamente, el area total del paralelogramo es igual a \" + str(area))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "-6TBo_HvK9q8"
   },
   "source": [
    "![ejercicio.png](./img/ejercicio.png)\n",
    "\n",
    "## Ejercicio 4\n",
    "Escribe un programa que calcule el area de un paralelogramo (base x altura). También con `input`. En este caso debe ser capaz de admitir valores reales, con decimales, para base y altura en español. (PISTA: Recuerda que tendrás que hacer uso del método replace)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "id": "uzUIa1JqK9q8"
   },
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Ingrese la medida de la base del paralelogramo:  5,5\n",
      "Ingrese la medida de la altura del paralelogramo:  5,5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "el area del paralelogramo es :30,25\n"
     ]
    }
   ],
   "source": [
    "#pedir al usuario la base y la altura, pero admitiendo la coma.\n",
    "base = float(input(\"Ingrese la medida de la base del paralelogramo: \").replace(\",\",\".\"))\n",
    "altura = float(input(\"Ingrese la medida de la altura del paralelogramo: \").replace(\",\",\".\"))\n",
    "\n",
    "#realizar el calculo\n",
    "area = base * altura\n",
    "\n",
    "#presentacion del resultado, con coma\n",
    "print(\"el area del paralelogramo es :\" + str(area).replace(\".\",\",\"))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "5zKugi5iK9q8"
   },
   "source": [
    "![ejercicio.png](./img/ejercicio.png)\n",
    "\n",
    "## Ejercicio 5\n",
    "Complete el siguiente código para solicitar al usuario su nombre y su edad. Luego, calcule en qué año nació el usuario y muestre el resultado."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "id": "LISfTnRkK9q8"
   },
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "¿Cuál es tu nombre?  Jose\n",
      "¿Cuál es tu edad?  21\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Jose, naciste en el año 2004.\n"
     ]
    }
   ],
   "source": [
    "nombre = str(input(\"¿Cuál es tu nombre? \"))\n",
    "edad = int(input(\"¿Cuál es tu edad? \"))\n",
    "año_actual = 2025  # Puedes cambiarlo según el año en curso\n",
    "año_nacimiento = año_actual - edad\n",
    "\n",
    "print(f\"{nombre}, naciste en el año {año_nacimiento}.\")\n"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
